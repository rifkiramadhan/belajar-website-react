---- Keterangan Latihan 7 ----
1. Pengertian Sepintas, Bagian dari LifeCycle sebuah component
   - State
   - Render
     - Adalah method yang paling pertama dipanggil oleh react component secara default
     - Adalah method basic yang harus kita masukkan ketika kita membuat component dengan class component
   - Component Didmount

2. Yang dipelajari sebelumnya
   - Cunter yang mengupdate sebuah parent dari child nya

3. LifeCycle
   - Spesialnya ketika kita membuat component dengan class component kita akan memiliki LifeCycle dari component tersebut
     1 Mounting
       - Artinya ketika component itu pertama dipasang
      A. Constructor
         - Adalah default dari ES6
           - Contoh:
             - constructor (props) {
                    super(props);
                    this.state = {
                        count: 1
                    }
                } 
           - Props tidak dapat diupdate, dia hanya menerima nilai masukkan dari luar kemudian dimunculkan dalam component kita
           - Namun state disini kita bisa memunculkannya dalam component kita, kemudian kita bisa mengupdatenya / nilainya bisa dupdate
           - Kita dapat mengupdate state yang paling baik pada LifeCycle componentDidMount, jadi setelah component nya dimunculkan ke browser
             kita dapat mengupdate nilainya
           - Ketika kita akan mengupdate sebuah component dia akan lari ke pertanyaan shouldComponentUpdate "Haruskah saya mengupdate component tersebut?"
             caranya adalah melakukan return true; pada shouldComponentUpdate untuk menormalkannya kembali / mengupdatenya
           - shouldComponentUpdate ini adalah LifeCycle yang sangat berguna untuk meningkatkan performa dari sebuah web, dimana kita bisa memblokir
             sebuah updatean dari sebuah component
             - Contoh:
               - Ketika kita bisa tidak menginginkan component kita diupdate kita bisa mereturn shouldComponentUpdate menjadi false, dengan catatan
                 terlebih dahulu kita check dulu apakah props nya dengan statenya berubah atau tidak, kalau berubah mungkin kita update, kalau tidak
                 berubah tidak perlu diupdate
               - Setelah sub component update dia akan merender dengan state yang baru dan dia akan memanggil getSnapshotBeforeUpdate, jadi dia akan
                 mengcapture nilai props sebelumnya dengan nilai state sebelumnya
               - Hal ini bisa kita gunakan untuk LifeCycle yang terakhir yaitu componentDidUpdate, jadi setelah component berhasil diupdate dia akan selesai
                 di akhir console (updating)
     2 Updating 
       - Yaitu ketika component itu kita update
     3 Unmounting
       - Ketika component itu dicopot atau hilang dari page kita
   - Gunakanlah inspect element untuk melihat LifeCycle yang kita buat
   - Menariknya component ketika kita menggunakan class component kita bisa mengupdate value pada component kita menjadi component baru
     yang kita inginkan

4. Urutan ketika membuat component
   - Urutan Pertama
     - constructor
     - getDerivedStateFromProps
     - render
     - componentDidMount